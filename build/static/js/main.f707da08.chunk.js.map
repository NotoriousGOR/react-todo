{"version":3,"sources":["components/layout/header.js","components/AddTodo.js","components/TodoItem.js","components/Todos.js","components/pages/about.js","App.js","serviceWorker.js","index.js"],"names":["header","react_default","a","createElement","style","headerStyle","react_router_dom","to","linkStyle","background","color","padding","borderBottom","marginBottom","fontSize","margin","AddTodo","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","title","onChange","e","setState","defineProperty","target","name","value","onSubmit","preventDefault","props","addTodo","inherits","createClass","key","display","type","placeholder","flex","className","Component","TodoItem","getStyle","textDecoration","todo","completed","_this$props$todo","id","markComplete","bind","btnStyle","onClick","delTodo","border","cursor","borderRadius","float","Todos","todos","map","components_TodoItem","about","Fragment","App","Axios","delete","then","res","filter","post","toConsumableArray","data","_this2","get","_this3","react_router","exact","path","render","components_AddTodo","components_Todos","component","About","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mRAGe,SAASA,IACtB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,MAAOC,GACbJ,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,IAAIH,MAAOI,GAApB,QAEQ,IAJV,IAKI,IACFP,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,SAASH,MAAOI,GAAzB,WAQR,IAAMH,EAAc,CAClBI,WAAY,OACZC,MAAO,OACPC,QAAS,MACTC,aAAc,kBACdC,aAAc,OAGVL,EAAY,CAChBE,MAAO,OACPI,SAAU,OACVC,OAAQ,eCkBKC,EA9Cf,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,MAAQ,CACNC,MAAO,IAFXhB,EAKEiB,SAAW,SAAAC,GAAC,OACVlB,EAAKmB,SAALlB,OAAAmB,EAAA,EAAAnB,CAAA,GACGiB,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,SAPhCvB,EAUEwB,SAAW,SAAAN,GACTA,EAAEO,iBACFzB,EAAK0B,MAAMC,QAAQ3B,EAAKe,MAAMC,OAC9BhB,EAAKmB,SAAS,CACZH,MAAO,MAdbhB,EAAA,OAAAC,OAAA2B,EAAA,EAAA3B,CAAAJ,EAAAC,GAAAG,OAAA4B,EAAA,EAAA5B,CAAAJ,EAAA,EAAAiC,IAAA,SAAAP,MAAA,WAmBI,OACEzC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMwC,SAAUrB,KAAKqB,SAAUvC,MAAO,CAAE8C,QAAS,SAC/CjD,EAAAC,EAAAC,cAAA,SACEgD,KAAK,OACLV,KAAK,QACLW,YAAY,WACZhD,MAAO,CAAEiD,KAAM,KAAM1C,QAAS,OAC9B+B,MAAOpB,KAAKY,MAAMC,MAClBC,SAAUd,KAAKc,WAEjBnC,EAAAC,EAAAC,cAAA,SACEgD,KAAK,SACLT,MAAM,SACNY,UAAU,MACVlD,MAAO,CAAEiD,KAAM,aAlC3BrC,EAAA,CAA6BuC,aCAhBC,EAAb,SAAAvC,GAAA,SAAAuC,IAAA,IAAAtC,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,GAAA,QAAAjC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAoC,IAAAzB,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACE+B,SAAW,WACT,MAAO,CACLhD,WAAY,UACZG,aAAc,iBACdC,aAAc,MACd6C,eAAgBvC,EAAK0B,MAAMc,KAAKC,UAAY,eAAiB,SANnEzC,EAAA,OAAAC,OAAA2B,EAAA,EAAA3B,CAAAoC,EAAAvC,GAAAG,OAAA4B,EAAA,EAAA5B,CAAAoC,EAAA,EAAAP,IAAA,SAAAP,MAAA,WAUW,IAAAmB,EACevC,KAAKuB,MAAMc,KAAzBG,EADDD,EACCC,GAAI3B,EADL0B,EACK1B,MACZ,OACElC,EAAAC,EAAAC,cAAA,OAAKC,MAAOkB,KAAKmC,YACfxD,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,SACEgD,KAAK,WACLf,SAAUd,KAAKuB,MAAMkB,aAAaC,KAAK1C,KAAMwC,KAE9C3B,EACDlC,EAAAC,EAAAC,cAAA,UAAQC,MAAO6D,EAAUC,QAAS5C,KAAKuB,MAAMsB,QAAQH,KAAK1C,KAAMwC,IAAhE,WApBVN,EAAA,CAA8BD,aAmCxBU,EAAW,CACfxD,WAAY,UACZC,MAAO,OACP0D,OAAQ,OACRzD,QAAS,UACT0D,OAAQ,UACRC,aAAc,MACdC,MAAO,SAEMf,ICtBAgB,EArBf,SAAAvD,GAAA,SAAAuD,IAAA,OAAApD,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,GAAApD,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAAoD,GAAAxC,MAAAV,KAAAE,YAAA,OAAAJ,OAAA2B,EAAA,EAAA3B,CAAAoD,EAAAvD,GAAAG,OAAA4B,EAAA,EAAA5B,CAAAoD,EAAA,EAAAvB,IAAA,SAAAP,MAAA,WACW,IAAAvB,EAAAG,KACP,OAAOA,KAAKuB,MAAM4B,MAAMC,IAAI,SAAAf,GAAI,OAC9B1D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwE,EAAD,CACE1B,IAAKU,EAAKG,GACVH,KAAMA,EACNI,aAAc5C,EAAK0B,MAAMkB,aACzBI,QAAShD,EAAK0B,MAAMsB,iBAR9BK,EAAA,CAA2BjB,aCFZ,SAASqB,IACtB,OACE3E,EAAAC,EAAAC,cAACF,EAAAC,EAAM2E,SAAP,KACE5E,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mEC8ES2E,6MAxEb5C,MAAQ,CACNuC,MAAO,MAaTV,aAAe,SAAAD,GACb3C,EAAKmB,SAAS,CACZmC,MAAOtD,EAAKe,MAAMuC,MAAMC,IAAI,SAAAf,GAI1B,OAHIA,EAAKG,KAAOA,IACdH,EAAKC,WAAaD,EAAKC,WAElBD,SAMbQ,QAAU,SAAAL,GACRiB,IAAMC,OAAN,8CAAA/C,OAA2D6B,IAAMmB,KAAK,SAAAC,GAAG,OACvE/D,EAAKmB,SAAS,CAAEmC,MAAOtD,EAAKe,MAAMuC,MAAMU,OAAO,SAAAxB,GAAI,OAAIA,EAAKG,KAAOA,WAKvEhB,QAAU,SAAAX,GACR4C,IAAMK,KAAK,6CAA8C,CACvDjD,QACAyB,WAAW,IACVqB,KAAK,SAAAC,GAAG,OACT/D,EAAKmB,SAAS,CACZmC,MAAK,GAAAxC,OAAAb,OAAAiE,EAAA,EAAAjE,CAAMD,EAAKe,MAAMuC,OAAjB,CAAwBS,EAAII,+FAnCnB,IAAAC,EAAAjE,KAClByD,IAAMS,IAAI,wDAAwDP,KAChE,SAAAC,GAAG,OACDK,EAAKjD,SAAS,CACZmC,MAAOS,EAAII,0CAoCV,IAAAG,EAAAnE,KACP,OACErB,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKmD,UAAU,OACbrD,EAAAC,EAAAC,cAAA,OAAKmD,UAAU,aACbrD,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAAhD,GAAK,OACX5C,EAAAC,EAAAC,cAACF,EAAAC,EAAM2E,SAAP,KACE5E,EAAAC,EAAAC,cAAC2F,EAAD,CAAShD,QAAS2C,EAAK3C,UACvB7C,EAAAC,EAAAC,cAAC4F,EAAD,CACEtB,MAAOgB,EAAKvD,MAAMuC,MAClBV,aAAc0B,EAAK1B,aACnBI,QAASsB,EAAKtB,cAKtBlE,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOE,KAAK,SAASI,UAAWC,cAlE1B1C,aCEE2C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASV,OAAO5F,EAAAC,EAAAC,cAACqG,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5B,KAAK,SAAA6B,GACjCA,EAAaC","file":"static/js/main.f707da08.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function header() {\n  return (\n    <div>\n      <header style={headerStyle}>\n        <h1>Todo List</h1>\n        <Link to=\"/\" style={linkStyle}>\n          Home\n        </Link>{\" \"}\n        |{\" \"}\n        <Link to=\"/about\" style={linkStyle}>\n          About\n        </Link>\n      </header>\n    </div>\n  );\n}\n\nconst headerStyle = {\n  background: \"#333\",\n  color: \"#fff\",\n  padding: \"2vw\",\n  borderBottom: \"10px solid grey\",\n  marginBottom: \"2vh\"\n};\n\nconst linkStyle = {\n  color: \"#fff\",\n  fontSize: \"1rem\",\n  margin: \"2vw\"\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class AddTodo extends Component {\n  state = {\n    title: \"\"\n  };\n\n  onChange = e =>\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({\n      title: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.onSubmit} style={{ display: \"flex\" }}>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Add Todo\"\n            style={{ flex: \"10\", padding: \"5px\" }}\n            value={this.state.title}\n            onChange={this.onChange}\n          />\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            className=\"btn\"\n            style={{ flex: \"1\" }}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nAddTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired\n};\n\nexport default AddTodo;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      background: \"#f4f4f4\",\n      borderBottom: \"1px solid #ccc\",\n      marginBottom: \"1vh\",\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\"\n    };\n  };\n\n  render() {\n    const { id, title } = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input\n            type=\"checkbox\"\n            onChange={this.props.markComplete.bind(this, id)}\n          />\n          {title}\n          <button style={btnStyle} onClick={this.props.delTodo.bind(this, id)}>\n            x\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n};\n\nconst btnStyle = {\n  background: \"#ff0000\",\n  color: \"#fff\",\n  border: \"none\",\n  padding: \"5px 9px\",\n  cursor: \"pointer\",\n  borderRadius: \"50%\",\n  float: \"right\"\n};\nexport default TodoItem;\n","import React, { Component } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport PropTypes from \"prop-types\";\n\nexport class Todos extends Component {\n  render() {\n    return this.props.todos.map(todo => (\n      <div>\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          markComplete={this.props.markComplete}\n          delTodo={this.props.delTodo}\n        />\n      </div>\n    ));\n  }\n}\n\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n};\n\nexport default Todos;\n","import React from \"react\";\n\nexport default function about() {\n  return (\n    <React.Fragment>\n      <h1>About</h1>\n      <p>This is a Todo List using React and React-Router!</p>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/layout/header\";\nimport AddTodo from \"./components/AddTodo\";\nimport Todos from \"./components/Todos\";\nimport About from \"./components/pages/about\";\n\nclass App extends Component {\n  // Creating the state\n  state = {\n    todos: []\n  };\n\n  componentDidMount() {\n    Axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=20\").then(\n      res =>\n        this.setState({\n          todos: res.data\n        })\n    );\n  }\n\n  // Toggle Complete\n  markComplete = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n\n  // Delete Todo\n  delTodo = id => {\n    Axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res =>\n      this.setState({ todos: this.state.todos.filter(todo => todo.id !== id) })\n    );\n  };\n\n  // Add Todo\n  addTodo = title => {\n    Axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\n      title,\n      completed: false\n    }).then(res =>\n      this.setState({\n        todos: [...this.state.todos, res.data]\n      })\n    );\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos\n                    todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}